{"version":3,"sources":["store/context.js","store/reducer.js","store/constant.js","components/organism/Layout/index.jsx","components/atoms/Heading/index.jsx","store/action.js","components/molecules/HackerNewsListingView/index.jsx","utils/index.js","components/atoms/Loader/index.jsx","components/molecules/HackerNewsListing/index.jsx","components/molecules/Header/index.jsx","components/organism/HackerNews/index.jsx","API/index.js","components/templates/HackerRank/index.jsx","App.js","serviceWorker.js","index.js"],"names":["GlobalContext","React","createContext","GlobalContextProvider","data","children","Provider","value","initialState","hideItem","upvotedItem","page","Reducer","state","action","type","payload","Layout","Heading","variation","headingtype","HeadingElement","className","defaultProps","HackerNewsListingView","newsView","upVote","index","useContext","dispatch","title","created_at","num_comments","url","points","author","onClick","newList","findIndex","item","objectID","splice","push","getUpVotedItem","upvoteNewsItem","Summary","href","rel","target","replace","split","getDomain","date","seconds","Math","floor","Date","getTime","interval","timeStampConvertor","Loader","HackerNewsListing","news","hide","length","map","idx","key","post","Header","comments","voteCount","newsDetails","HackerNews","useState","hits","sethits","loadItems","setLoadItems","useEffect","fetch","then","response","status","Error","json","labels","series","itm","graphData","options","high","axisX","labelInterpolationFnc","id","filter","disabled","HackerRank","App","useReducer","Boolean","window","location","hostname","match","renderMethod","ReactDOM","hydrate","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0ef6070a.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const GlobalContext = React.createContext()\r\n\r\nexport const GlobalContextProvider = ({ data, children }) => {\r\n  return (\r\n    <GlobalContext.Provider value={data}>{children}</GlobalContext.Provider>\r\n  )\r\n}\r\n\r\nGlobalContextProvider.propTypes = {\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.element,\r\n        PropTypes.elementType,\r\n        PropTypes.array,\r\n        PropTypes.object,\r\n      ]).isRequired,\r\n      data: PropTypes.shape().isRequired\r\n}","import { HIDE_ITEMS, UP_VOTED_ITEMS, PAGE_ITEM } from './constant'\r\n\r\nconst initialState = {\r\n  hideItem: '',\r\n  upvotedItem: [],\r\n  page: 1,\r\n}\r\n\r\nconst Reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case HIDE_ITEMS:\r\n      return {\r\n        ...state,\r\n        hideItem: action.payload,\r\n      }\r\n    case UP_VOTED_ITEMS:\r\n      return {\r\n        ...state,\r\n        upvotedItem: [...action.payload],\r\n      }\r\n    case PAGE_ITEM:\r\n      return {\r\n        ...state,\r\n        page: action.payload,\r\n      }\r\n    default:\r\n      return state || initialState\r\n  }\r\n}\r\n\r\nexport { initialState, Reducer }\r\n","export const HIDE_ITEMS = 'hideItems';\r\nexport const UP_VOTED_ITEMS = 'upVotedItem';\r\nexport const PAGE_ITEM = 'pageItem'\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport '../../../styles/styles.scss'\r\n\r\nexport const Layout = ({ children }) => {\r\n  return <main>{children}</main>\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.element,\r\n    PropTypes.elementType,\r\n    PropTypes.array,\r\n    PropTypes.object,\r\n  ]).isRequired,\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport './heading.scss'\r\n\r\nexport const Heading = ({ children, variation, headingtype }) => {\r\n  const HeadingElement = headingtype\r\n  return (\r\n    <HeadingElement\r\n      headingtype={headingtype}\r\n      className={`heading ${variation}`}\r\n    >\r\n      {children}\r\n    </HeadingElement>\r\n  )\r\n}\r\n\r\nHeading.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nHeading.defaultProps = {\r\n  headingtype: 'h1',\r\n  variation: '',\r\n}\r\n","import { HIDE_ITEMS, UP_VOTED_ITEMS, PAGE_ITEM } from './constant'\r\n\r\nexport const getHideItems = (data, dispatch) => {\r\n    dispatch({\r\n        type: HIDE_ITEMS,\r\n        payload: data\r\n    })\r\n }\r\n\r\n export const getUpVotedItem = (data, dispatch) => {\r\n    dispatch({\r\n        type: UP_VOTED_ITEMS,\r\n        payload: data\r\n    })\r\n }\r\n\r\n export const getPageItem = (data, dispatch) => {\r\n    dispatch({\r\n        type: PAGE_ITEM,\r\n        payload: data\r\n    })\r\n }\r\n\r\n","import React, { useContext } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { getDomain, timeStampConvertor } from '../../../utils'\r\nimport { Heading } from '../../atoms/Heading'\r\nimport { GlobalContext } from '../../../store/context'\r\nimport { getUpVotedItem } from '../../../store/action'\r\n\r\nimport './hackerNewsListingView.scss'\r\n\r\nexport const HackerNewsListingView = ({\r\n  newsView,\r\n  hideItem,\r\n  upVote,\r\n  index,\r\n}) => {\r\n  const { state, dispatch } = useContext(GlobalContext)\r\n  const { upvotedItem } = state\r\n  const { title, created_at, num_comments, url, points, author } = newsView\r\n\r\n  const upvoteNewsItem = (newsView) => {\r\n    const newList = [...upvotedItem]\r\n    const index = newList.findIndex(\r\n      (item) => item.objectID === newsView.objectID\r\n    )\r\n    if (index >= 0) {\r\n      newList.splice(index, 1)\r\n    } else {\r\n      newList.push(newsView)\r\n    }\r\n\r\n    getUpVotedItem(newList, dispatch)\r\n  }\r\n\r\n  return (\r\n    <article className={`article ${index % 2 === 0 ? 'even' : 'odd'}`}>\r\n      <span className=\"article__comments\">\r\n        {num_comments ? num_comments : 0}\r\n      </span>\r\n\r\n      <span className=\"article__points\">{points ? points : 0}</span>\r\n\r\n      <button\r\n        className=\"article__up-vote\"\r\n        onClick={() => upvoteNewsItem(newsView)}\r\n      >\r\n        {upVote}\r\n      </button>\r\n\r\n      <HackerNewsListingView.Summary\r\n        created_at={created_at}\r\n        author={author}\r\n        hideItem={hideItem}\r\n        title={title}\r\n        url={url}\r\n      />\r\n    </article>\r\n  )\r\n}\r\n\r\nconst Summary = ({ created_at, author, hideItem, title, url }) => {\r\n  return (\r\n    <div className=\"article__creation-details\">\r\n      <Heading headingtype=\"h2\">{title}&nbsp;</Heading>\r\n\r\n      <small className=\"article__external-url\">\r\n        <a href={url} rel=\"noopener noreferrer\" target=\"_blank\">\r\n          ({getDomain(url)})\r\n        </a>\r\n      </small>\r\n      <address className=\"article__author\">&nbsp;by {author}</address>\r\n      <time className=\"article__date\"> {timeStampConvertor(created_at)}</time>\r\n      <button className=\"article__btn-hide\" type=\"button\" onClick={hideItem}>\r\n        &nbsp;[ hide ]\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\nHackerNewsListingView.Summary = Summary\r\n\r\nHackerNewsListingView.propTypes = {\r\n  newsView: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      created_at: PropTypes.string,\r\n      author: PropTypes.string,\r\n      title: PropTypes.string,\r\n      url: PropTypes.string,\r\n    })\r\n  ),\r\n  hideItem: PropTypes.func,\r\n  upVote: PropTypes.string,\r\n  index: PropTypes.number,\r\n  num_comments: PropTypes.number,\r\n  points: PropTypes.number,\r\n}\r\n","\r\nimport React from 'react'\r\nimport fetch from 'isomorphic-fetch'\r\n\r\n\r\nconst getDomain = (url) => {\r\n  return (\r\n    url &&\r\n    url\r\n      .replace(\"http://\", \"\")\r\n      .replace(\"https://\", \"\")\r\n      .replace(\"www.\", \"\")\r\n      .split(/[/?#]/)[0]\r\n  );\r\n};\r\n\r\nconst timeStampConvertor = (date) => {\r\n    const seconds = Math.floor((new Date().getTime() - new Date(date)) / 1000);\r\n    let interval = Math.floor(seconds / 31536000);\r\n    if (interval > 1) {\r\n      return `${interval} years`;\r\n    }\r\n    interval = Math.floor(seconds / 2592000);\r\n    if (interval > 1) {\r\n      return `${interval} month`;\r\n    }\r\n    interval = Math.floor(seconds / 86400);\r\n    if (interval > 1) {\r\n      return `${interval} days`;\r\n    }\r\n    interval = Math.floor(seconds / 3600);\r\n    if (interval > 1) {\r\n      return `${interval} hours`;\r\n    }\r\n    interval = Math.floor(seconds / 60);\r\n    if (interval > 1) {\r\n      return `${interval} minutes`;\r\n    }\r\n    return `${Math.floor(seconds)} seconds`;\r\n  };\r\n\r\n  const useFetch = (url, options) => {\r\n    const [response, setResponse] = React.useState(null);\r\n    const [error, setError] = React.useState(null);\r\n    \r\n    React.useEffect(() => {\r\n      const fetchData = async () => {\r\n        try {\r\n          const res = await fetch(url, options);\r\n          const json = await res.json();\r\n          setResponse(json);\r\n        } catch (error) {\r\n          setError(error);\r\n        }\r\n      };\r\n      fetchData();\r\n    }, []);\r\n    return { response, error };\r\n  };\r\n\r\nexport { getDomain, timeStampConvertor, useFetch };\r\n","import React from 'react'\r\n\r\nimport './loader.scss'\r\n\r\nexport const Loader = () => {\r\n  return <div className=\"loader\"></div>\r\n}\r\n","import React, { useContext } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { HackerNewsListingView } from '../HackerNewsListingView'\r\nimport { Loader } from '../../atoms/Loader'\r\n\r\nimport { GlobalContext } from '../../../store/context'\r\n\r\nexport const HackerNewsListing = ({ news, hide }) => {\r\n  const { state } = useContext(GlobalContext)\r\n\r\n  const { upvotedItem } = state\r\n\r\n  const upVote = (post) => {\r\n    const index = upvotedItem.length\r\n      ? upvotedItem.findIndex((item) => item.objectID === post.objectID)\r\n      : -1\r\n    if (index >= 0) {\r\n      return '\\u25BC'\r\n    }\r\n    return '\\u25B2'\r\n  }\r\n\r\n  return news && news.length > 0 ? (\r\n    news.map((item, idx) =>\r\n      item.title ? (\r\n        <HackerNewsListingView\r\n          key={item.objectID}\r\n          newsView={item}\r\n          hideItem={() => hide(item.objectID)}\r\n          upVote={upVote(item)}\r\n          index={idx}\r\n        />\r\n      ) : null\r\n    )\r\n  ) : (\r\n    <Loader />\r\n  )\r\n}\r\n\r\nHackerNewsListing.propTypes = {\r\n  news: PropTypes.array,\r\n  hide: PropTypes.func,\r\n}\r\n","import React from 'react'\r\n\r\nimport './header.scss'\r\n\r\nexport const Header = ({ comments, voteCount, upVote, newsDetails }) => {\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"header__comments\">{comments}</div>\r\n      <div className=\"header__vote-count\">{voteCount}</div>\r\n      <div className=\"header__up-vote\">{upVote}</div>\r\n      <div className=\"header__news-details\">{newsDetails}</div>\r\n    </header>\r\n  )\r\n}\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport ChartistGraph from 'react-chartist'\r\n\r\nimport { HACKER_NEWS } from '../../../API'\r\nimport { HackerNewsListing } from '../../molecules/HackerNewsListing'\r\nimport { GlobalContext } from '../../../store/context'\r\nimport { Header } from '../../molecules/Header'\r\n\r\nimport './hackerNews.scss'\r\n\r\nexport const HackerNews = () => {\r\n  const { state } = useContext(GlobalContext)\r\n  const { page } = state\r\n\r\n  const [hits, sethits] = useState([])\r\n  const [loadItems, setLoadItems] = useState(page)\r\n\r\n  useEffect(() => {\r\n    fetch(`${HACKER_NEWS}?page=${loadItems}`)\r\n      .then(function (response) {\r\n        if (response.status >= 400) {\r\n          throw new Error('Bad response from server')\r\n        }\r\n        return response.json()\r\n      })\r\n      .then((data) => {\r\n        sethits(data?.hits)\r\n      })\r\n  }, [loadItems])\r\n\r\n  const hide = (id) => {\r\n    const hideItem = hits.filter((itm) => itm.objectID !== id)\r\n    sethits(hideItem)\r\n  }\r\n\r\n  const labels = hits.map((item) => item.objectID)\r\n  const series = hits.map((itm) => itm.points)\r\n\r\n  let graphData = {\r\n    labels: labels,\r\n    series: [series],\r\n  }\r\n\r\n  var options = {\r\n    high: series,\r\n    axisX: {\r\n      labelInterpolationFnc: function (value, index) {\r\n        return index % 2 === 0 ? value : null\r\n      },\r\n    },\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header\r\n        comments=\"Comments\"\r\n        voteCount=\"Vote count\"\r\n        upVote=\"Up vote\"\r\n        newsDetails=\"News Details\"\r\n      />\r\n      <HackerNewsListing news={hits} hide={hide} />\r\n      <div className=\"btn-container\">\r\n        <button\r\n          type=\"button\"\r\n          disabled={loadItems === 1}\r\n          onClick={() => setLoadItems(loadItems - 1)}\r\n          className={`btn-container__btn ${\r\n            loadItems === 1 ? 'disabled' : null\r\n          }`}\r\n        >\r\n          Previous\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => setLoadItems(loadItems + 1)}\r\n          className=\"btn-container__btn\"\r\n        >\r\n          Next\r\n        </button>\r\n      </div>\r\n      <ChartistGraph data={graphData} options={options} type={'Line'} />\r\n    </>\r\n  )\r\n}\r\n","\r\nexport const HACKER_NEWS = 'http://hn.algolia.com/api/v1/search'","import React from 'react'\r\nimport { Layout } from '../../organism/Layout'\r\nimport { HackerNews } from '../../organism/HackerNews'\r\n\r\nexport const HackerRank = () => {\r\n  return (\r\n    <Layout>\r\n      <HackerNews />\r\n    </Layout>\r\n  )\r\n}\r\n","import React, { useReducer } from 'react'\n\nimport { GlobalContextProvider } from './store/context'\nimport { Reducer, initialState } from './store/reducer'\nimport { HackerRank } from './components/templates/HackerRank'\n\n\nconst App = () => {\n  const [state, dispatch] = useReducer(Reducer, initialState)\n  return (\n    <GlobalContextProvider data={{ state, dispatch }}>\n         <HackerRank />\n    </GlobalContextProvider>\n  )\n}\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst renderMethod = module.hot ? ReactDOM.render : ReactDOM.hydrate;\n\nrenderMethod(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}